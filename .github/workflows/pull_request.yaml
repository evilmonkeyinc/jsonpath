name: Pull Requests
on:
  pull_request:
    branches:
      - main
      - develop
    paths:
      - '**.go'
      - 'go.mod'
jobs:
  test:
    strategy:
      matrix:
        go-version: [1.17.x]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        go version
        go mod download
    - name: Run Test
      run: |
        go test -v -count=10 ./...
  lint:
    strategy:
      matrix:
        go-version: [1.17.x]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        go install golang.org/x/lint/golint@latest
        go mod download
    - name: Run Lint
      run: |
        golint -set_exit_status=1 ./...
  release_check:  
    runs-on: ubuntu-latest
    outputs:
      changes: ${{ steps.changes.outputs.changes}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: Get changed files
        id: changes
        run: |
          echo "::set-output name=changes::$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep 'go.mod\|.go$' | grep -v _test.go$ | xargs)"
  dry_run:
    runs-on: ubuntu-latest
    needs: release_check
    if: ${{needs.release_check.outputs.changes}}
    outputs:
      version: ${{ steps.release.outputs.version }}
    steps:
      - uses: actions/checkout@master
      - uses: go-semantic-release/action@v1
        id: release
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          allow-initial-development-versions: true
          force-bump-patch-version: true
          dry: true
      - name: Expected Version
        run: |
          echo ${{ steps.release.outputs.version }}
