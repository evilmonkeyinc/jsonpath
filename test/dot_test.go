package test

import "testing"

func Test_Dot(t *testing.T) {
	tests := []testData{
		{
			query:     `@.a`,
			data:      `{"a": 1}`,
			expected:  float64(1),
			consensus: nil,
		},
		{
			query:         `$.['key']`,
			data:          `{ "key": "value", "other": {"key": [{"key": 42}]} }`,
			expected:      "value",
			consensus:     "value",
			expectedError: "",
		},
		{
			query:         `$.["key"]`,
			data:          `{ "key": "value", "other": {"key": [{"key": 42}]} }`,
			expected:      nil,
			consensus:     consensusNone,
			expectedError: "invalid JSONPath query '$.[\"key\"]' invalid token. '[\"key\"]' does not match any token format",
		},
		{
			query:         `$.[key]`,
			data:          `{ "key": "value", "other": {"key": [{"key": 42}]} }`,
			expected:      nil,
			consensus:     consensusNone,
			expectedError: "invalid JSONPath query '$.[key]' invalid token. '[key]' does not match any token format",
		},
		{
			query:         `$.key`,
			data:          `{ "key": "value" }`,
			expected:      "value",
			consensus:     "value",
			expectedError: "",
		},
		{
			query:         `$.key`,
			data:          `[0, 1]`,
			expected:      nil,
			consensus:     nil,
			expectedError: "key: invalid token target. expected [map] got [slice]",
		},
		{
			query:         `$.key`,
			data:          `{ "key": ["first", "second"] }`,
			expected:      []interface{}{"first", "second"},
			consensus:     []interface{}{"first", "second"},
			expectedError: "",
		},
		{
			query:         `$.id`,
			data:          `[{"id": 2}]`,
			expected:      nil,
			consensus:     nil,
			expectedError: "key: invalid token target. expected [map] got [slice]",
		},
		{
			query:         `$.key`,
			data:          `{ "key": {} }`,
			expected:      map[string]interface{}{},
			consensus:     map[string]interface{}{},
			expectedError: "",
		},
		{
			query:         `$.key`,
			data:          `{ "key": null }`,
			expected:      nil,
			consensus:     nil,
			expectedError: "",
		},
		{
			query:         `$.missing`,
			data:          `{"key": "value"}`,
			expected:      nil,
			consensus:     nil,
			expectedError: "key: invalid token key 'missing' not found",
		},
		{
			query:         `$[0:2].key`,
			data:          `[{"key": "ey"}, {"key": "bee"}, {"key": "see"}]`,
			expected:      []interface{}{"ey", "bee"},
			consensus:     []interface{}{"ey", "bee"},
			expectedError: "",
		},
		{
			query:         `$..[1].key`,
			data:          `{ "k": [{"key": "some value"}, {"key": 42}], "kk": [[{"key": 100}, {"key": 200}, {"key": 300}], [{"key": 400}, {"key": 500}, {"key": 600}]], "key": [0, 1] }`,
			expected:      []interface{}{float64(200), float64(42), float64(500)},
			consensus:     []interface{}{float64(200), float64(42), float64(500)},
			expectedError: "",
		},
		{
			query:         `$[*].a`,
			data:          `[{"a": 1},{"a": 1}]`,
			expected:      []interface{}{float64(1), float64(1)},
			consensus:     []interface{}{float64(1), float64(1)},
			expectedError: "",
		},
		{
			query:         `$[*].a`,
			data:          `[{"a": 1}]`,
			expected:      []interface{}{float64(1)},
			consensus:     []interface{}{float64(1)},
			expectedError: "",
		},
		{
			query:         `$[*].a`,
			data:          `[{"a": 1},{"b": 1}]`,
			expected:      []interface{}{float64(1)},
			consensus:     []interface{}{float64(1)},
			expectedError: "",
		},
		{
			query:         `$[?(@.id==42)].name`,
			data:          `[{"id": 42, "name": "forty-two"}, {"id": 1, "name": "one"}]`,
			expected:      []interface{}{"forty-two"},
			consensus:     []interface{}{"forty-two"},
			expectedError: "",
		},
		{
			query:         `$..key`,
			data:          `{ "object": { "key": "value", "array": [ {"key": "something"}, {"key": {"key": "russian dolls"}} ] }, "key": "top" }`,
			expected:      []interface{}{"russian dolls", "something", "top", "value", map[string]interface{}{"key": "russian dolls"}},
			consensus:     []interface{}{"russian dolls", "something", "top", "value", map[string]interface{}{"key": "russian dolls"}},
			expectedError: "",
		},
		{
			query:         `$.store..price`,
			data:          `{ "store": { "book": [ { "category": "reference", "author": "Nigel Rees", "title": "Sayings of the Century", "price": 8.95 }, { "category": "fiction", "author": "Evelyn Waugh", "title": "Sword of Honour", "price": 12.99 }, { "category": "fiction", "author": "Herman Melville", "title": "Moby Dick", "isbn": "0-553-21311-3", "price": 8.99 }, { "category": "fiction", "author": "J. R. R. Tolkien", "title": "The Lord of the Rings", "isbn": "0-395-19395-8", "price": 22.99 } ], "bicycle": { "color": "red", "price": 19.95 } } }`,
			expected:      []interface{}{float64(12.99), float64(19.95), float64(22.99), float64(8.95), float64(8.99)},
			consensus:     []interface{}{float64(12.99), float64(19.95), float64(22.99), float64(8.95), float64(8.99)},
			expectedError: "",
		},
		{
			query:         `$...key`,
			data:          `{ "object": { "key": "value", "array": [ {"key": "something"}, {"key": {"key": "russian dolls"}} ] }, "key": "top" }`,
			expected:      []interface{}{"russian dolls", "something", "top", "value", map[string]interface{}{"key": "russian dolls"}},
			consensus:     []interface{}{"russian dolls", "something", "top", "value"},
			expectedError: "",
		},
		{
			query:         `$[0,2].key`,
			data:          `[{"key": "ey"}, {"key": "bee"}, {"key": "see"}]`,
			expected:      []interface{}{"ey", "see"},
			consensus:     []interface{}{"ey", "see"},
			expectedError: "",
		},
		{
			query:         `$['one','three'].key`,
			data:          `{ "one": {"key": "value"}, "two": {"k": "v"}, "three": {"some": "more", "key": "other value"} }`,
			expected:      []interface{}{"value", "other value"},
			consensus:     []interface{}{"value", "other value"},
			expectedError: "",
		},
		{
			query:         `$.key-dash`,
			data:          `{ "key": 42, "key-": 43, "-": 44, "dash": 45, "-dash": 46, "": 47, "key-dash": "value", "something": "else" }`,
			expected:      "value",
			consensus:     "value",
			expectedError: "",
		},
		{
			query:         `$."key"`,
			data:          `{ "key": "value", "\"key\"": 42 }`,
			expected:      float64(42),
			consensus:     consensusNone,
			expectedError: "",
		},
		{
			query:         `$.."key"`,
			data:          `{ "object": { "key": "value", "\"key\"": 100, "array": [ {"key": "something", "\"key\"": 0}, {"key": {"key": "russian dolls"}, "\"key\"": {"\"key\"": 99}} ] }, "key": "top", "\"key\"": 42 }`,
			expected:      []interface{}{float64(0), float64(42), float64(99), float64(100), map[string]interface{}{`"key"`: float64(99)}},
			consensus:     consensusNone,
			expectedError: "",
		},
		{
			query:         `$.`,
			data:          `{"key": 42, "": 9001, "''": "nice"}`,
			expected:      nil,
			consensus:     consensusNone,
			expectedError: "invalid JSONPath query '$.' invalid token. token string is empty",
		},
		{
			query:         `$.in`,
			data:          `{ "in": "value" }`,
			expected:      "value",
			consensus:     "value",
			expectedError: "",
		},
		{
			query:         `$.length`,
			data:          `{ "length": "value" }`,
			expected:      "value",
			consensus:     "value",
			expectedError: "",
		},
		{
			query:         `$.length`,
			data:          `[4, 5, 6]`,
			expected:      int64(3),
			consensus:     nil,
			expectedError: "",
		},
		{
			query:         `$.null`,
			data:          `{ "null": "value" }`,
			expected:      "value",
			consensus:     "value",
			expectedError: "",
		},
		{
			query:         `$.true`,
			data:          `{ "true": "value" }`,
			expected:      "value",
			consensus:     "value",
			expectedError: "",
		},
		{
			query:         `$.$`,
			data:          `{ "$": "value" }`,
			expected:      map[string]interface{}{"$": "value"},
			consensus:     consensusNone,
			expectedError: "",
		},
		{
			query:         `$.屬性`,
			data:          `{ "屬性": "value" }`,
			expected:      "value",
			consensus:     "value",
			expectedError: "",
		},
		{
			query:         `$.2`,
			data:          `["first", "second", "third", "forth", "fifth"]`,
			expected:      nil,
			consensus:     consensusNone,
			expectedError: "key: invalid token target. expected [map] got [slice]",
		},
		{
			query:         `$.2`,
			data:          `{"a": "first", "2": "second", "b": "third"}`,
			expected:      "second",
			consensus:     "second",
			expectedError: "",
		},
		{
			query:         `$.-1`,
			data:          `["first", "second", "third", "forth", "fifth"]`,
			expected:      nil,
			consensus:     nil,
			expectedError: "key: invalid token target. expected [map] got [slice]",
		},
		{
			query:         `$.'key'`,
			data:          `{ "key": "value", "'key'": 42 }`,
			expected:      float64(42),
			consensus:     consensusNone,
			expectedError: "",
		},
		{
			query:         `$..'key'`,
			data:          `{ "object": { "key": "value", "'key'": 100, "array": [ {"key": "something", "'key'": 0}, {"key": {"key": "russian dolls"}, "'key'": {"'key'": 99}} ] }, "key": "top", "'key'": 42 }`,
			expected:      []interface{}{float64(42), float64(100), float64(0), map[string]interface{}{"'key'": float64(99)}, float64(99)},
			consensus:     consensusNone,
			expectedError: "",
		},
		{
			query:         `$.'some.key'`,
			data:          `{"some.key": 42, "some": {"key": "value"}, "'some.key'": 43}`,
			expected:      float64(43),
			consensus:     consensusNone,
			expectedError: "",
		},
		{
			query:         `$. a`,
			data:          `{" a": 1, "a": 2, " a ": 3, "": 4}`,
			expected:      float64(2),
			consensus:     consensusNone,
			expectedError: "",
		},
		{
			query:         `$.*`,
			data:          `[ "string", 42, { "key": "value" }, [0, 1] ]`,
			expected:      []interface{}{"string", float64(42), map[string]interface{}{"key": "value"}, []interface{}{float64(0), float64(1)}},
			consensus:     []interface{}{"string", float64(42), map[string]interface{}{"key": "value"}, []interface{}{float64(0), float64(1)}},
			expectedError: "",
		},
		{
			query:         `$.*`,
			data:          `[]`,
			expected:      []interface{}{},
			consensus:     []interface{}{},
			expectedError: "",
		},
		{
			query:         `$.*`,
			data:          `{}`,
			expected:      []interface{}{},
			consensus:     []interface{}{},
			expectedError: "",
		},
		{
			query:         `$.*`,
			data:          `{ "some": "string", "int": 42, "object": { "key": "value" }, "array": [0, 1] }`,
			expected:      []interface{}{"string", float64(42), []interface{}{float64(0), float64(1)}, map[string]interface{}{"key": "value"}},
			consensus:     []interface{}{"string", float64(42), []interface{}{float64(0), float64(1)}, map[string]interface{}{"key": "value"}},
			expectedError: "",
		},
		{
			query:         `$.*.bar.*`,
			data:          `[{"bar": [42]}]`,
			expected:      []interface{}{[]interface{}{float64(42)}},
			consensus:     []interface{}{float64(42)},
			expectedError: "",
		},
		{
			query:         `$.*.*`,
			data:          `[[1, 2, 3], [4, 5, 6]]`,
			expected:      []interface{}{[]interface{}{float64(1), float64(2), float64(3)}, []interface{}{float64(4), float64(5), float64(6)}},
			consensus:     []interface{}{float64(1), float64(2), float64(3), float64(4), float64(5), float64(6)},
			expectedError: "",
		},
		{
			query:         `$..*`,
			data:          `{ "key": "value", "another key": { "complex": "string", "primitives": [0, 1] } }`,
			expected:      []interface{}{"string", "value", float64(0), float64(1), []interface{}{float64(0), float64(1)}, map[string]interface{}{"complex": "string", "primitives": []interface{}{float64(0), float64(1)}}},
			consensus:     []interface{}{"string", "value", float64(0), float64(1), []interface{}{float64(0), float64(1)}, map[string]interface{}{"complex": "string", "primitives": []interface{}{float64(0), float64(1)}}},
			expectedError: "",
		},
		{
			query:         `$..*`,
			data:          `[ 40, null, 42 ]`,
			expected:      []interface{}{float64(40), float64(42), nil},
			consensus:     []interface{}{float64(40), float64(42), nil},
			expectedError: "",
		},
		{
			query:         `$..*`,
			data:          `42`,
			expected:      nil,
			consensus:     nil,
			expectedError: "invalid data. unexpected type or nil",
		},
		{
			query:         `$a`,
			data:          `{"a": 1, "$a": 2}`,
			expected:      nil,
			consensus:     nil,
			expectedError: "invalid JSONPath query '$a' unexpected token 'a' at index 1",
		},
		{
			query:         `.key`,
			data:          `{ "key": "value" }`,
			expected:      nil,
			consensus:     nil,
			expectedError: "invalid JSONPath query '.key' unexpected token '.' at index 0",
		},
		{
			query:         `key`,
			data:          `{ "key": "value" }`,
			expected:      nil,
			consensus:     nil,
			expectedError: "invalid JSONPath query 'key' unexpected token 'k' at index 0",
		},
	}

	batchTest(t, tests)
	// printConsensusMatrix(tests)
}
