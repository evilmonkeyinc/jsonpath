package test

import "testing"

func Test_Dot(t *testing.T) {
	batchTest(t, dotTests)
}

var dotTests []testData = []testData{
	{
		selector:  `@.a`,
		data:      `{"a": 1}`,
		expected:  float64(1),
		consensus: nil,
	},
	{
		selector:      `$.['key']`,
		data:          `{ "key": "value", "other": {"key": [{"key": 42}]} }`,
		expected:      "value",
		consensus:     "value",
		expectedError: "",
	},
	{
		selector:      `$.["key"]`,
		data:          `{ "key": "value", "other": {"key": [{"key": 42}]} }`,
		expected:      "value",
		consensus:     consensusNone,
		expectedError: "",
	},
	{
		selector:      `$.[key]`,
		data:          `{ "key": "value", "other": {"key": [{"key": 42}]} }`,
		expected:      nil,
		consensus:     consensusNone,
		expectedError: "invalid JSONPath selector '$.[key]' invalid token. '[key]' does not match any token format",
	},
	{
		selector:      `$.key`,
		data:          `{ "key": "value" }`,
		expected:      "value",
		consensus:     "value",
		expectedError: "",
	},
	{
		selector:      `$.key`,
		data:          `[0, 1]`,
		expected:      nil,
		consensus:     nil,
		expectedError: "key: invalid token target. expected [map] got [slice]",
	},
	{
		selector:      `$.key`,
		data:          `{ "key": ["first", "second"] }`,
		expected:      []interface{}{"first", "second"},
		consensus:     []interface{}{"first", "second"},
		expectedError: "",
	},
	{
		selector:      `$.id`,
		data:          `[{"id": 2}]`,
		expected:      nil,
		consensus:     nil,
		expectedError: "key: invalid token target. expected [map] got [slice]",
	},
	{
		selector:      `$.key`,
		data:          `{ "key": {} }`,
		expected:      map[string]interface{}{},
		consensus:     map[string]interface{}{},
		expectedError: "",
	},
	{
		selector:      `$.key`,
		data:          `{ "key": null }`,
		expected:      nil,
		consensus:     nil,
		expectedError: "",
	},
	{
		selector:      `$.missing`,
		data:          `{"key": "value"}`,
		expected:      nil,
		consensus:     nil,
		expectedError: "key: invalid token key 'missing' not found",
	},
	{
		selector:      `$[0:2].key`,
		data:          `[{"key": "ey"}, {"key": "bee"}, {"key": "see"}]`,
		expected:      []interface{}{"ey", "bee"},
		consensus:     []interface{}{"ey", "bee"},
		expectedError: "",
	},
	{
		selector:      `$..[1].key`,
		data:          `{ "k": [{"key": "some value"}, {"key": 42}], "kk": [[{"key": 100}, {"key": 200}, {"key": 300}], [{"key": 400}, {"key": 500}, {"key": 600}]], "key": [0, 1] }`,
		expected:      []interface{}{float64(200), float64(42), float64(500)},
		consensus:     []interface{}{float64(200), float64(42), float64(500)},
		expectedError: "",
	},
	{
		selector:      `$[*].a`,
		data:          `[{"a": 1},{"a": 1}]`,
		expected:      []interface{}{float64(1), float64(1)},
		consensus:     []interface{}{float64(1), float64(1)},
		expectedError: "",
	},
	{
		selector:      `$[*].a`,
		data:          `[{"a": 1}]`,
		expected:      []interface{}{float64(1)},
		consensus:     []interface{}{float64(1)},
		expectedError: "",
	},
	{
		selector:      `$[*].a`,
		data:          `[{"a": 1},{"b": 1}]`,
		expected:      []interface{}{float64(1)},
		consensus:     []interface{}{float64(1)},
		expectedError: "",
	},
	{
		selector:      `$[?(@.id==42)].name`,
		data:          `[{"id": 42, "name": "forty-two"}, {"id": 1, "name": "one"}]`,
		expected:      []interface{}{"forty-two"},
		consensus:     []interface{}{"forty-two"},
		expectedError: "",
	},
	{
		selector:      `$..key`,
		data:          `{ "object": { "key": "value", "array": [ {"key": "something"}, {"key": {"key": "russian dolls"}} ] }, "key": "top" }`,
		expected:      []interface{}{"russian dolls", "something", "top", "value", map[string]interface{}{"key": "russian dolls"}},
		consensus:     []interface{}{"russian dolls", "something", "top", "value", map[string]interface{}{"key": "russian dolls"}},
		expectedError: "",
	},
	{
		selector:      `$.store..price`,
		data:          `{ "store": { "book": [ { "category": "reference", "author": "Nigel Rees", "title": "Sayings of the Century", "price": 8.95 }, { "category": "fiction", "author": "Evelyn Waugh", "title": "Sword of Honour", "price": 12.99 }, { "category": "fiction", "author": "Herman Melville", "title": "Moby Dick", "isbn": "0-553-21311-3", "price": 8.99 }, { "category": "fiction", "author": "J. R. R. Tolkien", "title": "The Lord of the Rings", "isbn": "0-395-19395-8", "price": 22.99 } ], "bicycle": { "color": "red", "price": 19.95 } } }`,
		expected:      []interface{}{float64(12.99), float64(19.95), float64(22.99), float64(8.95), float64(8.99)},
		consensus:     []interface{}{float64(12.99), float64(19.95), float64(22.99), float64(8.95), float64(8.99)},
		expectedError: "",
	},
	{
		selector:      `$...key`,
		data:          `{ "object": { "key": "value", "array": [ {"key": "something"}, {"key": {"key": "russian dolls"}} ] }, "key": "top" }`,
		expected:      []interface{}{"russian dolls", "something", "top", "value", map[string]interface{}{"key": "russian dolls"}},
		consensus:     []interface{}{"russian dolls", "something", "top", "value"},
		expectedError: "",
	},
	{
		selector:      `$[0,2].key`,
		data:          `[{"key": "ey"}, {"key": "bee"}, {"key": "see"}]`,
		expected:      []interface{}{"ey", "see"},
		consensus:     []interface{}{"ey", "see"},
		expectedError: "",
	},
	{
		selector:      `$['one','three'].key`,
		data:          `{ "one": {"key": "value"}, "two": {"k": "v"}, "three": {"some": "more", "key": "other value"} }`,
		expected:      []interface{}{"value", "other value"},
		consensus:     []interface{}{"value", "other value"},
		expectedError: "",
	},
	{
		selector:      `$.key-dash`,
		data:          `{ "key": 42, "key-": 43, "-": 44, "dash": 45, "-dash": 46, "": 47, "key-dash": "value", "something": "else" }`,
		expected:      "value",
		consensus:     "value",
		expectedError: "",
	},
	{
		selector:      `$."key"`,
		data:          `{ "key": "value", "\"key\"": 42 }`,
		expected:      float64(42),
		consensus:     consensusNone,
		expectedError: "",
	},
	{
		selector:      `$.."key"`,
		data:          `{ "object": { "key": "value", "\"key\"": 100, "array": [ {"key": "something", "\"key\"": 0}, {"key": {"key": "russian dolls"}, "\"key\"": {"\"key\"": 99}} ] }, "key": "top", "\"key\"": 42 }`,
		expected:      []interface{}{float64(0), float64(42), float64(99), float64(100), map[string]interface{}{`"key"`: float64(99)}},
		consensus:     consensusNone,
		expectedError: "",
	},
	{
		selector:      `$.`,
		data:          `{"key": 42, "": 9001, "''": "nice"}`,
		expected:      nil,
		consensus:     consensusNone,
		expectedError: "invalid JSONPath selector '$.' invalid token. token string is empty",
	},
	{
		selector:      `$.in`,
		data:          `{ "in": "value" }`,
		expected:      "value",
		consensus:     "value",
		expectedError: "",
	},
	{
		selector:      `$.length`,
		data:          `{ "length": "value" }`,
		expected:      "value",
		consensus:     "value",
		expectedError: "",
	},
	{
		selector:      `$.length`,
		data:          `[4, 5, 6]`,
		expected:      int64(3),
		consensus:     nil,
		expectedError: "",
	},
	{
		selector:      `$.null`,
		data:          `{ "null": "value" }`,
		expected:      "value",
		consensus:     "value",
		expectedError: "",
	},
	{
		selector:      `$.true`,
		data:          `{ "true": "value" }`,
		expected:      "value",
		consensus:     "value",
		expectedError: "",
	},
	{
		selector:      `$.$`,
		data:          `{ "$": "value" }`,
		expected:      map[string]interface{}{"$": "value"},
		consensus:     consensusNone,
		expectedError: "",
	},
	{
		selector:      `$.屬性`,
		data:          `{ "屬性": "value" }`,
		expected:      "value",
		consensus:     "value",
		expectedError: "",
	},
	{
		selector:      `$.2`,
		data:          `["first", "second", "third", "forth", "fifth"]`,
		expected:      nil,
		consensus:     consensusNone,
		expectedError: "key: invalid token target. expected [map] got [slice]",
	},
	{
		selector:      `$.2`,
		data:          `{"a": "first", "2": "second", "b": "third"}`,
		expected:      "second",
		consensus:     "second",
		expectedError: "",
	},
	{
		selector:      `$.-1`,
		data:          `["first", "second", "third", "forth", "fifth"]`,
		expected:      nil,
		consensus:     nil,
		expectedError: "key: invalid token target. expected [map] got [slice]",
	},
	{
		selector:      `$.'key'`,
		data:          `{ "key": "value", "'key'": 42 }`,
		expected:      float64(42),
		consensus:     consensusNone,
		expectedError: "",
	},
	{
		selector:      `$..'key'`,
		data:          `{ "object": { "key": "value", "'key'": 100, "array": [ {"key": "something", "'key'": 0}, {"key": {"key": "russian dolls"}, "'key'": {"'key'": 99}} ] }, "key": "top", "'key'": 42 }`,
		expected:      []interface{}{float64(42), float64(100), float64(0), map[string]interface{}{"'key'": float64(99)}, float64(99)},
		consensus:     consensusNone,
		expectedError: "",
	},
	{
		selector:      `$.'some.key'`,
		data:          `{"some.key": 42, "some": {"key": "value"}, "'some.key'": 43}`,
		expected:      float64(43),
		consensus:     consensusNone,
		expectedError: "",
	},
	{
		selector:      `$. a`,
		data:          `{" a": 1, "a": 2, " a ": 3, "": 4}`,
		expected:      float64(2),
		consensus:     consensusNone,
		expectedError: "",
	},
	{
		selector:      `$.*`,
		data:          `[ "string", 42, { "key": "value" }, [0, 1] ]`,
		expected:      []interface{}{"string", float64(42), map[string]interface{}{"key": "value"}, []interface{}{float64(0), float64(1)}},
		consensus:     []interface{}{"string", float64(42), map[string]interface{}{"key": "value"}, []interface{}{float64(0), float64(1)}},
		expectedError: "",
	},
	{
		selector:      `$.*`,
		data:          `[]`,
		expected:      []interface{}{},
		consensus:     []interface{}{},
		expectedError: "",
	},
	{
		selector:      `$.*`,
		data:          `{}`,
		expected:      []interface{}{},
		consensus:     []interface{}{},
		expectedError: "",
	},
	{
		selector:      `$.*`,
		data:          `{ "some": "string", "int": 42, "object": { "key": "value" }, "array": [0, 1] }`,
		expected:      []interface{}{"string", float64(42), []interface{}{float64(0), float64(1)}, map[string]interface{}{"key": "value"}},
		consensus:     []interface{}{"string", float64(42), []interface{}{float64(0), float64(1)}, map[string]interface{}{"key": "value"}},
		expectedError: "",
	},
	{
		selector:      `$.*.bar.*`,
		data:          `[{"bar": [42]}]`,
		expected:      []interface{}{[]interface{}{float64(42)}},
		consensus:     []interface{}{float64(42)},
		expectedError: "",
	},
	{
		selector:      `$.*.*`,
		data:          `[[1, 2, 3], [4, 5, 6]]`,
		expected:      []interface{}{[]interface{}{float64(1), float64(2), float64(3)}, []interface{}{float64(4), float64(5), float64(6)}},
		consensus:     []interface{}{float64(1), float64(2), float64(3), float64(4), float64(5), float64(6)},
		expectedError: "",
	},
	{
		selector:      `$..*`,
		data:          `{ "key": "value", "another key": { "complex": "string", "primitives": [0, 1] } }`,
		expected:      []interface{}{"string", "value", float64(0), float64(1), []interface{}{float64(0), float64(1)}, map[string]interface{}{"complex": "string", "primitives": []interface{}{float64(0), float64(1)}}},
		consensus:     []interface{}{"string", "value", float64(0), float64(1), []interface{}{float64(0), float64(1)}, map[string]interface{}{"complex": "string", "primitives": []interface{}{float64(0), float64(1)}}},
		expectedError: "",
	},
	{
		selector:      `$..*`,
		data:          `[ 40, null, 42 ]`,
		expected:      []interface{}{float64(40), float64(42), nil},
		consensus:     []interface{}{float64(40), float64(42), nil},
		expectedError: "",
	},
	{
		selector:      `$..*`,
		data:          `42`,
		expected:      []interface{}{},
		consensus:     []interface{}{},
		expectedError: "",
	},
	{
		selector:      `$a`,
		data:          `{"a": 1, "$a": 2}`,
		expected:      nil,
		consensus:     nil,
		expectedError: "invalid JSONPath selector '$a' unexpected token 'a' at index 1",
	},
	{
		selector:      `.key`,
		data:          `{ "key": "value" }`,
		expected:      nil,
		consensus:     nil,
		expectedError: "invalid JSONPath selector '.key' unexpected token '.' at index 0",
	},
	{
		selector:      `key`,
		data:          `{ "key": "value" }`,
		expected:      nil,
		consensus:     nil,
		expectedError: "invalid JSONPath selector 'key' unexpected token 'k' at index 0",
	},
}
